<!DOCTYPE html>
<html lang="en" content="text/html; charset=UTF-8">

<title>Vik Kalkat</title>
<meta name="Resource-type" content="Document">
<meta name="viewport" content="width=device-width, initial-scale=1">

<meta property="og:title" content="Vik kalkat">
<meta property="og:description" content="Designer and Developer. Currently studying Systems Design Engineering at the University of Waterloo.">
<meta property="og:locale" content="en_US">
<meta property="og:site_name" content="Vik Kalkat: Designer and Developer">
<meta property="og:image:width" content="50">
<meta property="og:image:height" content="50">

<link href="https://www.danielheintzman.com/img/favicon.ico" rel="shortcut icon">
<link href="./Vik_Kalkat_files/style.css" rel="stylesheet" type="text/css">
<link rel="stylesheet" type="text/css" href="./Vik_Kalkat_files/style2.css">
<link rel="stylesheet" href="./robinhood_files/ionicons.min.css">
<link rel="stylesheet" href="./robinhood_files/font-awesome.min.css">

<script async="" src="./robinhood_files/analytics.js"></script>
<!-- <script>
    (function (i, s, o, g, r, a, m) {
      i['GoogleAnalyticsObject'] = r;
      i[r] = i[r] || function () {
        (i[r].q = i[r].q || []).push(arguments)
      }, i[r].l = 1 * new Date();
      a = s.createElement(o),
        m = s.getElementsByTagName(o)[0];
      a.async = 1;
      a.src = g;
      m.parentNode.insertBefore(a, m)
    })(window, document, 'script', 'https://www.google-analytics.com/analytics.js', 'ga');

    ga('create', 'UA-90367920-1', 'auto');
    ga('send', 'pageview');
</script> -->

<link rel="stylesheet" type="text/css" href="./robinhood_files/MyFontsWebfontsKit.css">
</head>

<body>

  <!-- <div id="header_work">
		<div class="new-navigation">
			<nav role="navigation">
				<div id="menuToggle">
				<input type="checkbox">
				<span></span>
				<span></span>
				<span></span>
				<ul id="menu">
					<li><a class="menu__link active" href="vik_kalkat.htm">Home	</a></li>
					<li><a class="menu__link" href="about.htm">About</a></li>
				</ul>
				</div>
			</nav>
		</div>
	</div> -->


  <!-- <section class="ibuyer">
    <div class="wrapper-home">
      <div class="container-home above">
        <div class="description">
          <h2>Personalized Shopping using Watson</h2>
          <p>Exploring user behaviour to cater a unique online shopping experience.</p>
          <div class="section">
          <a href="https://www.danielheintzman.com/portfolio/rested-homescreen/index.html" target="_self">Case Study</a>
          </div>
        </div>
        <div class="image">
          <img src="./Vik_Kalkat_files/img/ibuyer_preview.png" class="lazy-loaded">
        </div>
      </div>
    </div>
  </section> -->




  <div class="hero-title robinhood">
    <h1 class="robihood-title">Improving Stickiness of the Yelp Mobile Application</h1>
    <p>
      <i>Stickiness of an app refers to its ability to keep visitors on the app once they have navigated there or to encourage visitors to return frequently.</i>
    </p>
  </div>
  <img src="./Vik_Kalkat_files/img/yelp_banner2.jpg" class="hero-image" alt="Robinhood Header Image">

  <div class="project_container">
    <h1>Problem/Opportunity</h1>
    <p>
      Yelp is commonly used for its review system to easily find new places to eat. However, trying a new restaurant is not something done on a daily basis, and thus the number of times users visit the app becomes limited. While users do not try new places every day, they do still need to eat and most of the time they have a few “go to” places which are close to their location. Since Yelp holds a valuable reputation for initiating good eating experiences, the app has the opportunity to increase stickiness by analyzing other user needs in the eating space to determine what services can be added that would be more frequently desired. After performing the assessments shown below, it is seen that a strong solution is to implement a feature that allows users to easily contact their friends when they are going to eat. This will be a popular feature because people use food as an opportunity to spend time with their friends, and as a way to socialize; that is, people do not like eating alone.
    </p>
  </div>


  <div class="robinhood-container project_container">
    <h1>Needs Assessment</h1>
    <p>
      According to Yelp’s factsheet, 36% of users fall within the age range of 18-34, making this a good population to study when developing the new feature. (Due to time and budget constraints, other age groups were not investigated.) This age group consists of people who have strong social lives and also busy work schedules. User interviews expressed that grabbing a meal with friends is one of the most popular and desired activities for socializing. However, the problem they experience is that it is difficult to make successful plans with others when their unpredictable schedule finally allows them to eat.
    </p>
  </div>

  <div class="robinhood-container project_container">
    <h1>Feature Objectives & Solution</h1>
    <p>
      To make the feature a viable solution for the provided problem space, it must succeed in achieving the target user’s ultimate goal. As well, it must be of a profitable use for the business.
      <ol>
        <li>Make it easy for users to eat with their friends</li>
        <li>Make Yelp app more sticky by addressing a more frequent user need as identified</li>
        <li>Integrate the feature seamlessly into the existing workflow</li>
      </ol>
    </p>
    <br>

    <h3>Friends Finder</h3>
    <p>
      The presented feature encourages and makes it easier for users to share a meal with friends on their Yelp list. Users are informed of the distance between them and nearby friends (max 5km away from the user), and the distance between a particular restaurant and nearby friends (max 5km away from the restaurant). Being able to see who is nearby at any given time creates a dynamic selection of friends to invite at the time of when the user him/herself is looking to get food. If a user is interested in eating with a selected friend, they could use Yelp’s already existing chat feature to start a conversation and meet up. Equally as importantly, users are greatly encouraged to visit the Yelp app much more often because this feature provides use for any time that a user needs to eat, not only when a user wants to eat some where new. In a scenario where a user orders food for 3/3 of their main meals a day, the user may open the app 3 times in a single day to see who they can invite. Leveraging the existing chat feature also makes the app sticky because users will keep going back to the app to check and reply to messages.
    </p>

    <p>
      The flow shown below illustrates a scenario that would occur when a user wants to enjoy a meal at a chosen restaurant with a friend. This gives us a good idea of where the feature would integrate into the existing workflow.
    </p>
    <img src="./Vik_Kalkat_files/img/yelp_userflow.png" class="center-image inline-image" alt="Robinhood Process Image">
  </div>

  <div class="robinhood-container project_container">
    <h1>Existing Market Research</h1>
    <p>
      A similar feature was released by the mobile application “Snapchat,” on June 20 2017, called “Snap Maps,” in attempt to drive greater engagement on the app. Snap Project Designer, Jack Brody, says about the feature that “This map isn't about where am I, it's about where are my friends and what are they up to?” Friends Finder for Yelp holds a similar objective, but tailored for the experience of enjoying great food. The graph below shows Snapchat having a 10% increase in popularity from Spring 2016 - Fall 2016. From Fall 2016 - Spring 2017, Snapchat’s popularity only increases by 4%. This is thought to have been caused by Instagram’s adoption of Snapchat’s popular “Stories” feature, likely causing a loss in retention for Snapchat. After releasing the “Snap Maps” feature in July 2017, the Snapchat’s popularity inclines again in Spring 2017 - Fall 2017 having an increase of 9%. Some users showed concern in using this feature because they feel unsafe sharing their location with other people at a high accuracy. Articles posted by Snapchat users outlined that they felt like they are being watched by other users, and by Snap Inc., all the time. Therefore, when implementing a location based feature, we need to create a good balance between offering feature effectiveness and showing too much location based detail.
    </p>
    <img src="./Vik_Kalkat_files/img/yelp_competitor_data.png" class="center-image inline-image" alt="Robinhood Process Image">
  </div>

  <div class="robinhood-container project_container">
    <h1>Design</h1>
    <p>
      The relative location of friends is something that has a high rate of variability so the user must be able to access it easily to see updated information. Easily accessible features are better adopted, and as a result the business goal of making the app more sticky is better achieved. To ease learnability, I looked at common designs that users are familiar with; this makes it easy to learn the feature because users apply their experiences from similar occurrences in other apps. Chat bubbles are a common element that shows users who they are interacting with, and alerts them of new messages. Slight change to this design to clearly convey the metric as a unit of distance makes it an effective solution for for our design problem.
    </p>
    <img src="./Vik_Kalkat_files/img/yelp_chat_icon.png" class="center-image inline-image" alt="Robinhood Process Image">
    <p>
      From the considered use cases of this feature, it proves to be useful in two areas of the app:
    </p>
    <img src="./Vik_Kalkat_files/img/yelp_design_screens.png" class="center-image inline-image" alt="Robinhood Process Image">
  </div>

  <div class="robinhood-container project_container">
    <h1>Implementation</h1>
    <p>
      The proposed feature offers quick implementation for both design and development teams. The design of the existing app is impacted very slightly because the new feature fits into the current app. The flow of current user scenarios is not severely altered either. Front end development also requires minimal work because existing elements do not need to be restructured to account for the added feature. Also, the proposed feature leverages the already existing chat in the app, greatly reducing workload. Location sharing of up to a 5km radius needs to be implemented between users who are on each other’s Yelp friend list.
    </p>
    <br>
    <h3>Android</h3>
    <p style="margin-top:10px;">
      To request user information on Android, developers would have to add ACCESS_COARSE_LOCATION and ACCESS_FINE_LOCATION permissions to the AndroidManifest.yml file. To access the user’s location, the developer needs to use the LocationManager class.
    </p>
    <br>
    <h3>iOS</h3>
    <p style="margin-top:10px;">
      To request user information on the iOS platform developers would have to request the Location Services permission. The location permission dialog will appear when the developer inherits CLLocationManagerDelegate and requests information from the CLLocationManager.
    </p>
  </div>

  <div class="robinhood-container project_container">
    <h1>Challenges</h1>
    <p>
      Location settings create challenges for all apps because they consume a lot of processing power and are thus heavy on the device’s battery life. As a result, many users leave their location settings off and this can cause the location metric shown in “Friends Finder” to be outdated when a user looks at it. A potential solution is to refresh the location only while the user user is in the app. This is a reasonable compromise because if the person is not in the app, they probably are not looking to find a friend to eat with and thus do not need this feature to be active at such times.
    </p>
  </div>

  <div class="robinhood-container project_container">
    <h1>Performance Evaluation</h1>
    <p>
      The goal of “Friends Finder” is to further improve the eating experience of users by not only helping them find great places, but also great company to enjoy those places with. To evaluate how closely the proposed feature is meeting the defined objectives, the following metrics will be measured:
      <ol>
        <li>Increase in number of messages sent through Yelp chat.</li>
        <li>Percentage turn over rate of users meeting up after having a chat in Yelp’s app.</li>
        <li>Number of chat conversations initiated from a restaurant page.</li>
      </ol>
    </p>
  </div>




  <footer>
		<div class="footer-home">
			<h1>Contact</h1>
			<p>Say Hello at
				<a href="mailto:vik.kalkat@gmail.com">vik.kalkat@gmail.com</a> or send me a connection request on
				<a href="https://www.linkedin.com/in/vik-kalkat-22211289/" target="_blank">LinkedIn</a>
			</p>
		</div>
	</footer>

  <div class="footer-robinhood"></div>
    <div class="circCont">
      <a class="circle-expand" id="btn-close-expand" data-animation="simpleRotate" data-remove="200" href="vik_kalkat.htm" style="width: 0px;">
      <div class="circle"></div>
      <div class="btn-title">Close</div>
      </a>
      <a class="circle" id="btn-close" data-animation="simpleRotate" data-remove="200" href="vik_kalkat.htm" style=""></a>
  </div>


<script src="./robinhood_files/jquery.min.js"></script>
<script src="./robinhood_files/main.js"></script>
<script>
    $('#header_work #navigation li:nth-child(2) a').css({
      "color": '#222222'
    });

    function initialWeb(i) {
      var images = ["img/initial-web-stock-detail.png", "img/initial-web-search.png", "img/initial-web-list.png"];
      document.getElementById('initial-web').src = images[i];
      var links = document.getElementById('initial-web-link').childNodes;
      for (j = 0; j < 3; j++) {
        links[j * 2 + 1].classList.remove('active');
        if (i == j)
          links[j * 2 + 1].classList.add('active');
      }
    }

    function prevMobile(i) {
      var ios = ["img/previous-ios-stock-detail.png", "img/previous-ios-search.png", "img/previous-ios-list.png"];
      var android = ["img/previous-android-stock-detail.png", "img/previous-android-search.png",
        "img/previous-android-list.png"
      ];
      document.getElementById('prev-mobile-ios').src = ios[i];
      document.getElementById('prev-mobile-android').src = android[i];
      var links = document.getElementById('prev-mobile').childNodes;
      for (j = 0; j < 3; j++) {
        links[j * 2 + 1].classList.remove('active');
        if (i == j)
          links[j * 2 + 1].classList.add('active');
      }
    }

    function newMobile(i) {
      var ios = ["img/new-ios-stock-detail.png", "img/new-ios-search.png", "img/new-ios-list.png"];
      var android = ["img/new-android-stock-detail.png", "img/new-android-search.png", "img/new-android-list.png"];
      document.getElementById('new-mobile-ios').src = ios[i];
      document.getElementById('new-mobile-android').src = android[i];
      var links = document.getElementById('new-mobile').childNodes;
      for (j = 0; j < 3; j++) {
        links[j * 2 + 1].classList.remove('active');
        if (i == j)
          links[j * 2 + 1].classList.add('active');
      }
    }

    $(window).scroll(function () {
      if ($(window).scrollTop() + $(window).height() == $(document).height()) {
        $('#btn-close').hide();
        $('#btn-close-expand').width(100);
      } else {
        $('#btn-close-expand').width(0);
        $('#btn-close').show();

      }
    });
  </script>

</body></html>
